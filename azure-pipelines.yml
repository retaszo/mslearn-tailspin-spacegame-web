trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'
  demands:
    - npm

# Added these variables
variables:
  # Specifies the build configuration
  buildConfiguration: 'Release'
  # Specifies the path to the wwwroot directory
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  # Specifies the .NET Core SDK version to use
  dotnetSdkVersion: '3.1.300'

steps:
- task: UseDotNet@2
  # Use the variable dotnetSdkVersion
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    # Use the variable dotnetSdkVersion
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

# Use the variable wwwrootDir
- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  # Use the variable wwwrootDir
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# The templates replaced the build and publish tasks and are now added in the build.yml
# This performs the same tasks; Each template task uses the parameters argument to pass the configuration name to the template
- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

# To publish the .zip file to Azure Pipelines
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  # This arcument specifies to run the task only when the previous task succeeds
  condition: succeeded()